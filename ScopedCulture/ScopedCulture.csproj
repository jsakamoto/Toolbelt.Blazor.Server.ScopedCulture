<Project Sdk="Microsoft.NET.Sdk.Razor">
 
  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net5.0;net6.0;net7.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <AssemblyName>Toolbelt.Blazor.Server.ScopedCulture</AssemblyName>
    <RootNamespace>Toolbelt.Blazor.Server.ScopedCulture</RootNamespace>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <Version>1.0.0-preview.1</Version>
    <Authors>J.Sakamoto</Authors>
    <Copyright>Copyright © 2022 .NET Foundation, Contributors, and J.Sakamoto, The MIT License</Copyright>
    <Description>This NuGet package for Blazor Server apps adding an ability that changes the current culture of each connection without reloading.</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/jsakamoto/Toolbelt.Blazor.Server.ScopedCulture</PackageProjectUrl>
    <PackageTags>blazor,blazor-server,culture,cultureinfo</PackageTags>
    <PackageReleaseNotes>(Please write the package release notes in "./RELEASE-NOTES.txt")</PackageReleaseNotes>
    <PackageIcon>nupkg-icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <PackageOutputPath>../_dist</PackageOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\.assets\nupkg-icon.png" Visible="false" Pack="true" PackagePath="/" />
    <None Include="..\README.md" Visible="false" Pack="true" PackagePath="/" />
  </ItemGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ScopedCulture.Abstractions\ScopedCulture.Abstractions.csproj" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.1' ">
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="3.0.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net5.0' ">
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="5.0.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net6.0' ">
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="6.0.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net7.0' ">
    <PackageReference Include="Microsoft.AspNetCore.Components" Version="7.0.0-preview.3.22178.4" />
  </ItemGroup>

  <Target Name="BuildPackageReleaseNotes" BeforeTargets="GenerateNuspec">
    <ReadLinesFromFile File="./RELEASE-NOTES.txt">
      <Output TaskParameter="Lines" ItemName="ReleaseNoteLines" />
    </ReadLinesFromFile>
    <ItemGroup>
      <ReleaseNoteLines Include="v.0.0.0" />
    </ItemGroup>
    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
      <PackageReleaseNotes>$([System.Text.RegularExpressions.Regex]::Match($(PackageReleaseNotes), "^(v\.[\d\.]+.+?)v\.[\d\.]+", System.Text.RegularExpressions.RegexOptions.Singleline).Groups[1].Value)</PackageReleaseNotes>
    </PropertyGroup>
  </Target>

</Project>
